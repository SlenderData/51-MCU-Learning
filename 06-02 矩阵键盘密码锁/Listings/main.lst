C51 COMPILER V9.60.7.0   MAIN                                                              12/17/2024 07:50:12 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "LCD1602.h"
   4          #include "MatrixKey.h"
   5          
   6          unsigned char KeyNum;  // 当前矩阵键盘按键
   7          unsigned char Password[16];  // 与课程视频不同的数组实现，不受密码位数限制
   8          unsigned char *PasswordPtr = Password;  // 指向当前输入的密码位的指针
   9          unsigned char CorrectPassword[] = "1145141919810";  // 正确密码
  10          unsigned char i;  // 用于循环
  11          
  12          // 密码输入，成功返回 1，失败返回 0
  13          // 不可以使用 bool 类型，编译器不支持
  14          unsigned char AddPassword(unsigned char InputNum)
  15          {
  16   1              if(InputNum > 10) return 0;  // 大于 10 时均为非数字输入
  17   1              if(PasswordPtr >= Password + 16) return 0;  // 超出LCD显示范围
  18   1              *PasswordPtr = (InputNum == 10) ? 0 : InputNum;  // 按键 10 代表 0
  19   1              PasswordPtr++;
  20   1              LCD_ShowString(2, 1, "                ");  // 清空密码显示
  21   1              for(i = 0; i < PasswordPtr - Password; i++)  // 显示密码
  22   1              {
  23   2                      LCD_ShowNum(2, 1 + i, Password[i], 1);
  24   2              }
  25   1              return 1;
  26   1      }
  27          
  28          // 退格，成功返回 1，失败返回 0
  29          unsigned char Backspace(unsigned char InputKey)
  30          {
  31   1              if(InputKey != 12) return 0;  // 非退格键
  32   1              if(PasswordPtr == Password) return 0;  // 无密码可退格
  33   1              PasswordPtr--;
  34   1              LCD_ShowString(2, 1, "                ");  // 清空密码显示
  35   1              for(i = 0; i < PasswordPtr - Password; i++)  // 显示密码
  36   1              {
  37   2                      LCD_ShowNum(2, 1 + i, Password[i], 1);
  38   2              }
  39   1              return 1;
  40   1      }
  41          
  42          // 检查密码是否正确，成功检查返回 1，失败返回 0
  43          unsigned char CheckPassword(unsigned char InputKey)
  44          {
  45   1              if(InputKey != 11) return 0;  // 非确认键
  46   1              if((PasswordPtr - Password) != (sizeof(CorrectPassword) - 1))  // 密码位数不符
  47   1              {
  48   2                      LCD_ShowString(1, 10, "  Wrong");  // 显示密码错误提示
  49   2                      return 1;
  50   2              }
  51   1              for(i = 0; i < sizeof(CorrectPassword) - 1; i++)
  52   1              {
  53   2                      if(Password[i] != (CorrectPassword[i] - '0'))  // 密码错误
  54   2                      {
C51 COMPILER V9.60.7.0   MAIN                                                              12/17/2024 07:50:12 PAGE 2   

  55   3                              LCD_ShowString(1, 10, "  Wrong");  // 显示密码错误提示
  56   3                              return 1;
  57   3                      }
  58   2              }
  59   1              LCD_ShowString(1, 10, "Correct");  // 显示密码正确提示
  60   1              return 1;
  61   1      }
  62          
  63          // 主函数
  64          void main()
  65          {
  66   1              LCD_Init();
  67   1              LCD_ShowString(1, 1, "Password:");
  68   1              while(1)
  69   1              {
  70   2                      KeyNum = MatrixKey();
  71   2                      if(KeyNum)
  72   2                      {
  73   3                              if(AddPassword(KeyNum)) continue;
  74   3                              if(Backspace(KeyNum)) continue;
  75   3                              if(CheckPassword(KeyNum));
  76   3                      }
  77   2              }
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    359    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
